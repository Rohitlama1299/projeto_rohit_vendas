<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DoA9ByZ83AAAAABJRU5ErkJggg==
</value>
  </data>
</root>